name: junk.test
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch: {}
jobs:
  test:
    if: |
      github.event_name == 'push' || (
        (
          (github.event_name == 'issue_comment' && github.event.issue.pull_request) ||
          (github.event_name == 'pull_request_review_comment')
        ) &&
        contains(github.event.comment.body, '/test') &&
        !contains(github.event.comment.body, '/test skip')
      )
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/github-script@v7
        if: ${{ inputs.check }}
        with:
          script: |
            console.log(context.sha);

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "pending",
              context: context.workflow,
              target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            });
      - run: echo test

      - uses: actions/github-script@v7
        if: ${{ inputs.check && failure() }}
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "failure",
              context: context.workflow,
              target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            });
      - uses: actions/github-script@v7
        if: ${{ inputs.check && success() }}
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "success",
              context: context.workflow,
              target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            });
      - uses: actions/github-script@v7
        if: ${{ inputs.check && !success() && !failure() }}
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "error",
              context: context.workflow,
              target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            });
