name: junk.test
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch: {}
  push:
    branches:
      - master
jobs:
  test:
    if: |
      github.event_name == 'push' || (
        (
          (github.event_name == 'issue_comment' && github.event.issue.pull_request) ||
          (github.event_name == 'pull_request_review_comment')
        ) &&
        contains(github.event.comment.body, '/test') &&
        !contains(github.event.comment.body, '/test skip')
      )
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      actions: read
    steps:
      - id: head
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ "${{ github.event_name }}" = issue_comment ] ; then
            echo "sha=$(gh api '${{ github.event.issue.pull_request.url }}' | jq -r .head.sha)" >> "${GITHUB_OUTPUT}"
          else
            echo "sha=${{ github.event.after || github.head_ref || github.event.pull_request.head.sha  }}" >> "${GITHUB_OUTPUT}"
          fi

      # From https://github.com/Tiryoh/gha-jobid-action
      - name: Parse job_id
        id: jobid
        shell: bash
        run: |
          GITHUB_API="/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs"
          JOBINFO="$(curl --get -Ss -H "Authorization: Bearer ${{ github.token }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "${{ github.api_url }}${GITHUB_API}?per_page=100")"
          echo "${JOBINFO}"
          echo "${JOBINFO}" | grep "Resource not accessible by integration" &&  exit 1
          eval "$(echo ${JOBINFO} | jq -r --arg job_name "${INPUT_JOB_NAME}" '.jobs | map(select(.name == $job_name)) | .[0] | @sh "job_id=\(.id) html_url=\(.html_url)"')"
          echo ${job_id} | grep "null" > /dev/null && echo "parse error, job_id is ${job_id}. job name might be wrong. See https://github.com/Tiryoh/gha-jobid-action" && exit 1
          echo "job_id=${job_id}" >> $GITHUB_OUTPUT
          echo "html_url=${html_url}" >> $GITHUB_OUTPUT
      - id: job-url
        run: |
          echo "url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/${{ steps.jobid.outputs.job_id }}" >> "${GITHUB_OUTPUT}"

      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: "${{ steps.head.outputs.sha }}",
              state: "pending",
              context: context.workflow,
              target_url: "${{ steps.job-url.outputs.url }}",
            });

      - id: start
        if: ${{ always() }}
        run: |
          printf 'timestamp=%(%s)T\n' >> "${GITHUB_OUTPUT}"

      - run: echo test ; sleep 2

      - id: result-message
        if: ${{ always() }}
        run: |
          printf -v now '%(%s)T'
          duration=$((now - ${{ steps.start.outputs.timestamp }}))
          echo "message=${duration}s" >> "${GITHUB_OUTPUT}"

      - uses: actions/github-script@v7
        if: ${{ failure() || success() }}
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: "${{ steps.head.outputs.sha }}",
              state: "${{ job.status }}",
              context: context.workflow,
              target_url: "${{ steps.job-url.outputs.url }}",
              description: "${{ steps.result-message.outputs.message }}",
            });
      - uses: actions/github-script@v7
        if: ${{ !failure() && !success() }}
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: "${{ steps.head.outputs.sha }}",
              state: "error",
              context: context.workflow,
              target_url: "${{ steps.job-url.outputs.url }}",
              description: "${{ steps.result-message.outputs.message }} ${{ job.status }}",
            });
